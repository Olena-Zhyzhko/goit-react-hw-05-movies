{"version":3,"file":"static/js/849.88a8980d.chunk.js","mappings":"wQAOe,SAASA,IACpB,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BH,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KACA,GAA0BN,EAAAA,EAAAA,UAAS,MAAnC,eAAOO,EAAP,KAAcC,EAAd,KAJ8B,wCAO9B,WAAkCC,GAAlC,8EACIH,GAAW,GADf,mBAGuCI,EAAAA,EAAAA,IAAkBD,GAHzD,OAGkBE,EAHlB,OAIYT,EAAWS,EAAaC,KAAKC,SAC7BC,QAAQC,IAAIJ,GALxB,gDAQYH,EAAS,EAAD,IARpB,yBAWWF,GAAW,GAXtB,6EAP8B,sBA2B7B,OALDU,EAAAA,EAAAA,YAAU,YAtBoB,oCAuB1BC,CAAmBd,EAEtB,GAAE,IAEGF,GAGNa,QAAQC,IAAId,IAGR,0BACKM,IAAS,uBAAIA,EAAMW,UACnBb,IAAW,SAAC,IAAD,qEACXJ,EAAQkB,OAAS,GACdlB,EAAQmB,KAAI,gBAAGX,EAAH,EAAGA,GAAIY,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACR,gBAAaC,UAAU,mBAAvB,WACI,2CAAYF,QAAZ,IAAYA,EAAAA,EAAU,OACtB,8BAAIC,QAAJ,IAAIA,EAAAA,EAAW,OAFVb,EADD,QATb,IAkBd,C","sources":["components/SingleMovie/Reviews.jsx"],"sourcesContent":["import React from 'react';\nimport { fetchMovieReviews } from 'components/fetchMovies'\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Loader from 'components/Loader/Loader'\n\n\nexport default function Reviews() {\n    const [reviews, setReviews] = useState([])\n    const { movieId } = useParams();\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n\n    async function fetchMoviesReviews(id) {\n        setLoading(true);\n            try {\n                const responseData = await fetchMovieReviews(id);\n                setReviews(responseData.data.results);\n                console.log(responseData);\n            }\n            catch (error) {\n                setError(error);\n            }\n            finally {\n               setLoading(false)\n            }\n        };\n    \n    useEffect(() => {\n        fetchMoviesReviews(movieId);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n     if (!reviews) {\n        return null;\n    }\n    console.log(reviews);\n\n    return (\n        <ul>\n            {error && <p>{error.massage}</p>}\n            {loading && <Loader>Загружаем</Loader>}\n            {reviews.length > 0 &&\n                reviews.map(({ id, author, content }) => (\n                    <li key={id} className=\"ImageGalleryItem\">\n                        <p>Author: {author ?? ''}</p>\n                        <p>{content ?? ''}</p>\n                    </li>\n                ))\n            }\n        </ul>\n  )\n}\n\n\n"],"names":["Reviews","useState","reviews","setReviews","movieId","useParams","loading","setLoading","error","setError","id","fetchMovieReviews","responseData","data","results","console","log","useEffect","fetchMoviesReviews","massage","length","map","author","content","className"],"sourceRoot":""}