{"version":3,"file":"static/js/907.0c20a3d2.chunk.js","mappings":"gRAGe,SAASA,EAAT,GAAiC,IAAD,EAATC,EAAS,EAATA,MAIlCC,EAMID,EANJC,MACAC,EAKIF,EALJE,aACEC,EAIEH,EAJFG,OACAC,EAGEJ,EAHFI,SACAC,EAEEL,EAFFK,YACAC,EACEN,EADFM,aAIIC,EAAYJ,EAAOK,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,MAEzD,OACI,4BACM,gBAAKC,MAAM,wBAAX,SACKP,GACG,gBAAKO,MAAM,SAASC,IAAG,UAlB1B,mCAkB0B,OAAgBR,GAAeS,IAAKb,KAC3D,gBAAKW,MAAM,UAAUC,IAAKE,EAAOD,IAAKb,OAI9C,iBAAKW,MAAM,0BAAX,WACM,gBAAIA,MAAM,qBAAV,iBAAgCX,QAAhC,IAAgCA,EAAAA,EAAS,GAAzC,IAA8CC,EAAY,WAAOA,EAAac,MAAM,EAAG,GAA7B,KAAqC,OAC/F,kDAAgBV,EAAaW,QAAQ,UAArC,QAA2C,OAC3C,eAAIL,MAAM,oBAAV,uBACA,cAAGA,MAAM,0BAAT,gBAAoCR,QAApC,IAAoCA,EAAAA,EAAY,MAChD,eAAIQ,MAAM,oBAAV,qBACA,cAAGA,MAAM,gCAAT,gBAA0CL,QAA1C,IAA0CA,EAAAA,EAAa,QAdnE,WAkBL,CC/Bc,SAASW,EAAT,GAAiC,IAAD,IAANC,EAAM,EAANA,GAC7BC,GAAWC,EAAAA,EAAAA,MAKrB,OACI,4BACM,mDACA,2BACE,yBACI,SAAC,KAAD,CAAMC,GAAI,OAAQH,GAAIA,EAAII,MAAO,CAAEC,KAAI,UAAEJ,EAASG,aAAX,aAAE,EAAgBC,MAAzD,qBAGJ,yBACI,SAAC,KAAD,CAAMF,GAAI,UAAWH,GAAIA,EAAII,MAAO,CAAEC,KAAI,UAAEJ,EAASG,aAAX,aAAE,EAAgBC,MAA5D,2BAIZ,SAAC,EAAAC,SAAD,CAAUC,SAAU,KAApB,UACE,SAAC,KAAD,QAKP,CCrBc,SAASC,IAAkB,IAAD,EAC7BC,GAAYC,EAAAA,EAAAA,MAAZD,QACFR,GAAWC,EAAAA,EAAAA,MACjB,GAA0BS,EAAAA,EAAAA,UAAS,MAAnC,eAAO9B,EAAP,KAAc+B,EAAd,KAHqC,wCAKrC,WAAiCZ,GAAjC,uFAIYa,QAAQC,IAAId,GAJxB,UAMuCe,EAAAA,EAAAA,IAAcf,GANrD,OAMkBgB,EANlB,OASQJ,EAASI,EAAaC,MAT9B,sJALqC,sBA+BrC,OALAC,EAAAA,EAAAA,YAAU,YA1B2B,oCA2BjCC,CAAkBV,EACrB,GAAE,CAACA,IAGC5B,GAOH,4BACI,SAAC,KAAD,CAAMsB,GAAE,UAAEF,EAASG,aAAX,aAAE,EAAgBC,KAA1B,sBACA,SAACzB,EAAD,CAAaC,MAAOA,KACpB,SAACkB,EAAD,CAAgBC,GAAIS,OATf,IAYd,C","sources":["components/SingleMovie/SingleMovie.jsx","components/SingleMovie/AdditionalInfo.jsx","pages/MovieIdDetails/MovieIdDetails.jsx"],"sourcesContent":["import React from 'react'\nimport noImg from 'images/noImages.jpg'\n\nexport default function SingleMovie({ movie }) {\nconst imageURL = \"https://image.tmdb.org/t/p/w500\";\n\nconst {\n    title,\n    release_date,\n      genres,\n      overview,\n      poster_path,\n      vote_average,\n    } = movie;\n\n\n    const genreName = genres.map(ganre => ganre.name).join(', ');\n\n  return (\n      <div>\n            <div class=\"modal-movie-cont__img\">\n                {poster_path ? \n                    <img class=\"poster\" src={`${imageURL}${poster_path}`} alt={title}  /> : \n                    <img class=\"noImage\" src={noImg} alt={title} />\n                }\n            </div>\n      {/* <div class=\"modal-movie-cont__data\"> */}\n            <div class=\"modal-movie-cont__about\">\n                  <h2 class=\"modal-movie__title\">{title ?? ''} {release_date ? `(${release_date.slice(0, 4)})` : ''}</h2>\n                  <p>User score: {vote_average.toFixed(1) ?? ''}</p>\n                  <h3 class=\"modal-movie-about\">Overview</h3>\n                  <p class=\"modal-movie-descr-movie\">{overview ?? ''}</p>\n                  <h3 class=\"modal-movie-about\">Genres</h3>\n                  <p class=\"modal-movie-table__item-value\">{genreName ?? ''}</p>\n            </div>\n          {/* </div> */}      </div>\n  )\n}\n","import React, { Suspense } from 'react'\nimport { Link, Outlet, useLocation } from \"react-router-dom\";\n// import { useParams } from 'react-router-dom';\n\n\n\nexport default function AdditionalInfo({ id }) {\n      const location = useLocation();\n\n    // const { movieId } = useParams();\n    // // console.log(movieId);\n\n  return (\n      <div>\n            <p>Additional information</p>\n            <ul>\n              <li>\n                  <Link to={'cast'} id={id} state={{ from: location.state?.from }}\n>Cast</Link >\n              </li>\n              <li>\n                  <Link to={'reviews'} id={id} state={{ from: location.state?.from }}\n>Reviews</Link >\n              </li>\n      </ul>\n      <Suspense fallback={null}>\n        <Outlet />\n      </Suspense>\n\n      </div>\n  )\n}\n\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { fetchOneMovie } from 'components/fetchMovies';\nimport { useParams, useLocation, Link } from 'react-router-dom';\nimport SingleMovie from 'components/SingleMovie/SingleMovie'\nimport AdditionalInfo from 'components/SingleMovie/AdditionalInfo'\n\n\n\n\nexport default function MovieIdDetails() {\n    const { movieId } = useParams();\n    const location = useLocation();\n    const [movie, setMovie] = useState(null);\n\n    async function fetchMoviesResult(id) {\n\n        // setLoading(true);\n        try {\n                console.log(id);\n                \n                const responseData = await fetchOneMovie(id);\n                // handleResult(responseData);\n                // console.log(responseData);\n            setMovie(responseData.data);\n            // localStorage.setItem('singleMovie', JSON.stringify(movie));\n\n            }\n            catch (error) {\n                // setError(error);\n            }\n            finally {\n            //    setLoading(false)\n            }\n        };\n    \n    useEffect(() => {\n        fetchMoviesResult(movieId);\n    }, [movieId])\n\n\n    if (!movie) {\n        return null;\n    }\n\n    \n\n  return (\n      <div>\n          <Link to={location.state?.from}>Go back</Link>\n          <SingleMovie movie={movie} />\n          <AdditionalInfo id={movieId} />\n      </div>\n  )\n}\n"],"names":["SingleMovie","movie","title","release_date","genres","overview","poster_path","vote_average","genreName","map","ganre","name","join","class","src","alt","noImg","slice","toFixed","AdditionalInfo","id","location","useLocation","to","state","from","Suspense","fallback","MovieIdDetails","movieId","useParams","useState","setMovie","console","log","fetchOneMovie","responseData","data","useEffect","fetchMoviesResult"],"sourceRoot":""}